// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/kyverno/kyverno/api/kyverno/v1

package v1

import (
	"k8s.io/apimachinery/pkg/types"
	apiextv1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

#ResourceSpec: {
	// APIVersion specifies resource apiVersion.
	// +optional
	apiVersion?: string @go(APIVersion)

	// Kind specifies resource kind.
	kind?: string @go(Kind)

	// Namespace specifies resource namespace.
	// +optional
	namespace?: string @go(Namespace)

	// Name specifies the resource name.
	// +optional
	name?: string @go(Name)

	// UID specifies the resource uid.
	// +optional
	uid?: types.#UID @go(UID)
}

// TargetResourceSpec defines targets for mutating existing resources.
#TargetResourceSpec: {
	// ResourceSpec contains the target resources to load when mutating existing resources.
	ResourceSpec?: #ResourceSpec

	// Context defines variables and data sources that can be used during rule execution.
	// +optional
	context?: [...#ContextEntry] @go(Context,[]ContextEntry)

	// Preconditions are used to determine if a policy rule should be applied by evaluating a
	// set of conditions. The declaration can contain nested `any` or `all` statements. A direct list
	// of conditions (without `any` or `all` statements is supported for backwards compatibility but
	// will be deprecated in the next major release.
	// See: https://kyverno.io/docs/writing-policies/preconditions/
	// +optional
	preconditions?: null | apiextv1.#JSON @go(RawAnyAllConditions,*apiextv1.JSON)
}
